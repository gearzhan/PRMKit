generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model approval {
  id                                         String     @id
  timesheetId                                String     @unique
  submitterId                                String
  approverId                                 String?
  status                                     String     @default("PENDING")
  submittedAt                                DateTime   @default(now())
  approvedAt                                 DateTime?
  comments                                   String?
  createdAt                                  DateTime   @default(now())
  updatedAt                                  DateTime
  employees_approvals_approverIdToemployees  employees? @relation("approvals_approverIdToemployees", fields: [approverId], references: [id])
  employees_approvals_submitterIdToemployees employees  @relation("approvals_submitterIdToemployees", fields: [submitterId], references: [id], onDelete: Cascade)
  timesheets                                 timesheets @relation(fields: [timesheetId], references: [id], onDelete: Cascade)
}

model csv_import_errors {
  id              String          @id
  logId           String
  rowNumber       Int
  field           String?
  value           String?
  message         String
  createdAt       DateTime        @default(now())
  csv_import_logs csv_import_logs @relation(fields: [logId], references: [id], onDelete: Cascade)
}

model csv_import_logs {
  id                String              @id
  fileName          String
  dataType          String
  operatorId        String
  totalRows         Int
  successRows       Int
  errorRows         Int
  status            String              @default("PROCESSING")
  startTime         DateTime            @default(now())
  endTime           DateTime?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  csv_import_errors csv_import_errors[]
  employees         employees           @relation(fields: [operatorId], references: [id], onDelete: Cascade)
}

model employee {
  id                                         String            @id
  employeeId                                 String            @unique
  name                                       String
  email                                      String            @unique
  password                                   String
  role                                       String            @default("LEVEL3")
  position                                   String?
  isActive                                   Boolean           @default(true)
  createdAt                                  DateTime          @default(now())
  updatedAt                                  DateTime
  approvals_approvals_approverIdToemployees  approvals[]       @relation("approvals_approverIdToemployees")
  approvals_approvals_submitterIdToemployees approvals[]       @relation("approvals_submitterIdToemployees")
  csv_import_logs                            csv_import_logs[]
  timesheets                                 timesheets[]
}

model project {
  id          String       @id
  projectCode String       @unique
  name        String
  description String?
  nickname    String?
  startDate   DateTime
  endDate     DateTime?
  status      String       @default("ACTIVE")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  timesheets  timesheets[]
}

model stage {
  id          String       @id
  taskId      String       @unique
  name        String
  description String?
  category    String
  isActive    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  timesheets  timesheets[]
}

model timesheet {
  id          String     @id
  employeeId  String
  projectId   String
  stageId     String?
  date        DateTime
  startTime   DateTime?
  endTime     DateTime?
  hours       Float
  description String?
  status      String     @default("DRAFT")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  approvals   approvals?
  stages      stages?    @relation(fields: [stageId], references: [id])
  projects    projects   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  employees   employees  @relation(fields: [employeeId], references: [id], onDelete: Cascade)

  @@unique([employeeId, projectId, date, hours])
}
